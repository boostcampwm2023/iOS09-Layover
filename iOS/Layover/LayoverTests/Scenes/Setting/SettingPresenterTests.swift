//
//  SettingPresenterTests.swift
//  Layover
//
//  Created by 김인환 on 12/13/23.
//  Copyright (c) 2023 CodeBomber. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Layover
import XCTest

final class SettingPresenterTests: XCTestCase {
    // MARK: Subject under test

    var sut: SettingPresenter!

    typealias Models = SettingModels

    // MARK: - Test lifecycle

    override func setUp() {
        super.setUp()
        setupSettingPresenter()
    }

    // MARK: - Test setup

    func setupSettingPresenter() {
        sut = SettingPresenter()
    }

    // MARK: - Test doubles

    class SettingDisplayLogicSpy: SettingDisplayLogic {
        var displayTableViewCalled = false
        var displayTableViewViewModel: Models.ConfigureTableView.ViewModel!
        var displayUserLogoutConfirmedCalled = false
        var displayUserWithdrawConfirmedCalled = false

        func displayTableView(viewModel: Models.ConfigureTableView.ViewModel) {
            displayTableViewCalled = true
            displayTableViewViewModel = viewModel
        }

        func displayUserLogoutConfirmed(viewModel: Models.Logout.ViewModel) {
            displayUserLogoutConfirmedCalled = true
        }

        func displayUserWithdrawConfirmed(viewModel: Models.Withdraw.ViewModel) {
            displayUserWithdrawConfirmedCalled = true
        }
    }

    // MARK: - Tests

    // 좋은 테스트는 아니다...
    func test_presentTableView를_호출하면_viewController의_displayTableView가_호출되고_versionNumber가_포함된_올바른_TableViewSections이_전달된다() {
        // Given
        let spy = SettingDisplayLogicSpy()
        sut.viewController = spy
        let response = Models.ConfigureTableView.Response(versionNumber: "7.7.7")

        let versionSectionItem = Models.SectionItem(title: .version,
                                                    secondaryText: "7.7.7")
        let versionSection = Models.TableSection(sectionTitle: .system, items: [versionSectionItem])

        let expectSections = [Models.policySection,
                              versionSection,
                              Models.signOutSection]

        // When
        sut.presentTableView(with: response)

        // Then
        XCTAssertTrue(spy.displayTableViewCalled, "presentTableView()를 실행해서 viewController의 displayTableView()가 호출되지 못했다")
        XCTAssertEqual(spy.displayTableViewViewModel.tableViewSections.count, expectSections.count, "presentTableView()를 실행해서 viewController의 displayTableView()에 전달된 tableViewSections의 개수가 다르다")
        for (sectionIndex, section) in expectSections.enumerated() {
            XCTAssertEqual(spy.displayTableViewViewModel.tableViewSections[sectionIndex].sectionTitle, section.sectionTitle)

            for (itemIndex, item) in section.items.enumerated() {
                XCTAssertEqual(spy.displayTableViewViewModel.tableViewSections[sectionIndex].items[itemIndex].title, item.title)
                XCTAssertEqual(spy.displayTableViewViewModel.tableViewSections[sectionIndex].items[itemIndex].secondaryText, item.secondaryText)
            }
        }
    }

    func test_presentUserLogoutConfirmed를_호출하면_viewController의_displayUserLogoutConfirmed가_호출된다() {
        // arrange
        let spy = SettingDisplayLogicSpy()
        sut.viewController = spy
        let response = Models.Logout.Response()

        // act
        sut.presentUserLogoutConfirmed(with: response)

        // assert
        XCTAssertTrue(spy.displayUserLogoutConfirmedCalled, "presentUserLogoutConfirmed()를 실행해서 viewController의 displayUserLogoutConfirmed()가 호출되지 못했다")
    }

    func test_presentUserWithdrawConfirmed를_호출하면_viewController의_displayUserWithdrawConfirmed가_호출된다() {
        // arrange
        let spy = SettingDisplayLogicSpy()
        sut.viewController = spy
        let response = Models.Withdraw.Response()

        // act
        sut.presentUserWithdrawConfirmed(with: response)

        // assert
        XCTAssertTrue(spy.displayUserWithdrawConfirmedCalled, "presentUserWithdrawConfirmed()를 실행해서 viewController의 displayUserWithdrawConfirmed()가 호출되지 못했다")
    }
}
