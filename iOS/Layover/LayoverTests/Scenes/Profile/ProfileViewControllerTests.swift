//
//  ProfileViewControllerTests.swift
//  Layover
//
//  Created by 김인환 on 12/12/23.
//  Copyright (c) 2023 CodeBomber. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Layover
import XCTest

final class ProfileViewControllerTests: XCTestCase {
    // MARK: Subject under test

    var sut: ProfileViewController!
    typealias Models = ProfileModels

    // MARK: - Test lifecycle

    override func setUp() {
        super.setUp()
        setupProfileViewController()
    }

    // MARK: - Test setup

    func setupProfileViewController() {
        sut = ProfileViewController(profileType: .own)
    }

    // MARK: - Test doubles

    final class ProfileBusinessLogicSpy: ProfileBusinessLogic {
        var fetchProfileCalled = false
        var fetchMorePostsCalled = false
        var showPostDetailCalled = false
        var showPostDetailRequest: Models.ShowPostDetail.Request!

        func fetchProfile(with request: Models.FetchProfile.Request) -> Task<Bool, Never> {
            fetchProfileCalled = true
            return Task {
                return true
            }
        }

        func fetchMorePosts(with request: Models.FetchMorePosts.Request) -> Task<Bool, Never> {
            fetchMorePostsCalled = true
            return Task {
                return true
            }
        }

        func showPostDetail(with request: Models.ShowPostDetail.Request) {
            showPostDetailCalled = true
            showPostDetailRequest = request
        }

    }

    // MARK: - Tests

    func test_viewWillAppear가_호출되면_fetchProfile이_호출된다() {
        // arrange
        let spy = ProfileBusinessLogicSpy()
        sut.interactor = spy

        // act
        sut.viewWillAppear(false)

        // assert
        XCTAssertTrue(spy.fetchProfileCalled, "viewWillAppear가 호출되어 fetchProfile이 호출했다")
    }

    func test_스크롤이_바닥에_닿아_scrollViewBeginDecelerating이_호출되면_fetchMorePosts가_호출된다() {
        // arrange
        let spy = ProfileBusinessLogicSpy()
        sut.interactor = spy
        let scrollView = UIScrollView(frame: .init(x: 0, y: 0, width: 100, height: 100))
        scrollView.contentSize.height = 200
        scrollView.contentOffset.y = 300


        // act
        sut.scrollViewWillBeginDecelerating(scrollView)

        // assert
        XCTAssertTrue(spy.fetchMorePostsCalled, "스크롤이 바닥에 닿아 scrollViewBeginDecelerating이 호출되어 fetchPosts가 호출했다")
    }

    func test_스크롤이_바닥에_닿지_않고_scrollViewBeginDecelerating이_호출되면_fetchMorePosts가_호출된다() {
        // arrange
        let spy = ProfileBusinessLogicSpy()
        sut.interactor = spy
        let scrollView = UIScrollView(frame: .init(x: 0, y: 0, width: 100, height: 100))
        scrollView.contentSize.height = 200
        scrollView.contentOffset.y = 100


        // act
        sut.scrollViewWillBeginDecelerating(scrollView)

        // assert
        XCTAssertFalse(spy.fetchMorePostsCalled, "스크롤이 바닥에 닿지 않고 scrollViewBeginDecelerating이 호출되어 fetchPosts가 호출되지 않았다")
    }

    func test_스크롤을_아래로_당겨서_scrollViewBeginDecelerating이_호출되면_fetchMorePosts가_호출되지_않았다() {
        // arrange
        let spy = ProfileBusinessLogicSpy()
        sut.interactor = spy
        let scrollView = UIScrollView(frame: .init(x: 0, y: 0, width: 100, height: 100))
        scrollView.contentSize.height = 50
        scrollView.contentOffset.y = -100


        // act
        sut.scrollViewWillBeginDecelerating(scrollView)

        // assert
        XCTAssertFalse(spy.fetchMorePostsCalled, "스크롤이 아래로 당겨져서 scrollViewBeginDecelerating이 호출되어 fetchPosts가 호출되었다")
    }
}
